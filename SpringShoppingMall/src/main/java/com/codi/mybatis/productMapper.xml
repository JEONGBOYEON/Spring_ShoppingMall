<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="productMapper">


<!-- listNew dataCount -->
<select id="getDataCount" resultType="int">
	select nvl(count(*),0) from product
	where fileCategory='list'
</select>

<!-- listCategory dataCount  --> 
<select id="getDataCountCategory" parameterType="string" resultType="int">
	select nvl(count(*),0) from product
	where fileCategory='list' and productCategory=#{productCategory}
</select>

 
<!-- listNew list -->
<select id="getLists" parameterType="hashMap" resultType="com.codi.dto.ProductDTO">
	select * from (
	select rownum rnum, data.* from(
	select productid,productname,price,savefilename,storeName,storeUrl,originalName,superProduct 
	from product where fileCategory='list' order by productdate desc)data)
<![CDATA[
	where rnum>=#{start} and rnum<=#{end}
]]>
</select>

<!-- listNew list order -->
<select id="getListsOrder" parameterType="hashMap" resultType="com.codi.dto.ProductDTO">
	select * from (
	select rownum rnum, data.* from(
	select productid,productname,price,savefilename,storeName,storeUrl,originalName,superProduct 
	from product where fileCategory='list' order by ${order})data)
<![CDATA[
	where rnum>=#{start} and rnum<=#{end}
]]>
</select>

<!-- listCategory list -->
<select id="getListsCategory" parameterType="hashMap" resultType="com.codi.dto.ProductDTO">
	select * from (
	select rownum rnum, data.* from(
	select productid,productname,price,savefilename,storeName,storeUrl,originalName,superProduct 
	from product where fileCategory='list' and productCategory=#{productCategory} order by productDate desc)data)
<![CDATA[
	where rnum>=#{start} and rnum<=#{end}
]]>
</select>

<!-- listCategory list order-->
<select id="getListsCategoryOrder" parameterType="hashMap" resultType="com.codi.dto.ProductDTO">
	select * from (
	select rownum rnum, data.* from(
	select productid,productname,price,savefilename,storeName,storeUrl,originalName,superProduct 
	from product where fileCategory='list' and productCategory=#{productCategory} order by ${order})data)
<![CDATA[
	where rnum>=#{start} and rnum<=#{end}
]]>
</select>

<!-- storeHeart count -->
<select id="storeHeartCount" parameterType="hashMap" resultType="int">
	select nvl(count(*),0) from storeHeart
	where superProduct=#{superProduct} and userId = #{userId}
</select>

<!-- storeHeart insert -->
<insert id="insertHeart" parameterType="hashMap">
	insert into storeHeart (superProduct,userId)
	values (#{superProduct},#{userId})
</insert>

<!-- storeHeart delete -->
<delete id="deleteHeart" parameterType="hashMap">
	delete storeHeart where superProduct=#{superProduct} and userId = #{userId}
</delete>

<!-- storeHeart count list -->
<select id="storeHeartList" parameterType="String" resultType="String">
	select superProduct from storeHeart where userId = #{userId}
</select>

<!-- productAdminList -->
<select id="getAdminLists" resultType="com.codi.dto.ProductDTO">
	select productId,productCategory,productName,productSize,price,
	productDate,amount,color,state,fileCategory,originalName,saveFileName,superProduct,storeName,storeUrl
	from product order by productdate desc
</select>

<!-- productAdminCreate -->
<insert id="insertData" parameterType="com.codi.dto.ProductDTO">
	insert into product(productId,productCategory,productName,productSize,price,
	productDate,amount,color,state,fileCategory,originalName,saveFileName,superProduct,storeName,storeUrl)
	values (#{productId},#{productCategory},#{productName},#{productSize},#{price},
	sysdate,0,#{color},#{state},#{fileCategory},#{originalName},#{saveFileName},#{superProduct},#{storeName},#{storeUrl})
</insert>

<delete id="productAdminDelete" parameterType="string">
	delete product where productId=#{productId}
</delete>

</mapper>