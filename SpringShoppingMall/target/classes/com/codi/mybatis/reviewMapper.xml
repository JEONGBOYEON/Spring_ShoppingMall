<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="reviewMapper">

<!-- 사용자의 리뷰 데이터 -->
<select id="getList" parameterType="hashMap" resultType="com.codi.dto.ReviewDTO">
	select * from (
	select rownum rnum, data.* from (
	select review.productId productId,productName,rate,subject,content,review.originalName originalName, review.saveFileName saveFileName,
	to_char(reviewDate,'yyyy-mm-dd hh24:mi:ss') reviewDate, superProduct
	from review,product where review.productId=product.productId and userId=#{userId} and writed=#{writed}
	order by ${orderBy}) data) 
<![CDATA[
	where rnum>=#{start} and rnum<=#{end}
]]>
</select>

<!-- 사용자 리뷰 데이터 갯수 -->
<select id="getDataCount" parameterType="hashMap" resultType="int">
	select nvl(count(*),0) from review
	where userId = #{userId} and writed=#{writed}
</select>

<!-- 리뷰작성시 작성할 상품 정보 가져오기  -->
<select id="getProductList" parameterType="hashMap" resultType="com.codi.dto.ReviewDTO">
	select review.productId productId, productCategory,productName,productSize,color,to_char(reviewDate,'yyyy-mm-dd hh24:mi:ss') reviewDate
	from review,product
	where review.productId=product.productId and userId=#{userId} and review.productId=#{productId} and writed='no' and reviewDate=to_date(#{reviewDate},'yyyy-mm-dd hh24:mi:ss')
</select>

<!-- 리뷰 등록 -->
<update id="insertData" parameterType="com.codi.dto.ReviewDTO">
	update review set rate=#{rate},subject=#{subject},content=#{content},reviewDate=sysdate,
	originalName=#{originalName},savefileName=#{savefileName},writed='yes'
	where userId=#{userId} and productId=#{productId} and reviewDate=to_date(#{reviewDate},'yyyy-mm-dd hh24:mi:ss')
</update>

<!-- 삭제할 리뷰의 데이터 파일 정보 -->
<select id="getSaveFile" parameterType="hashMap" resultType="String">
	select saveFileName from review
	where userId=#{userId} and productId=#{productId} and reviewDate=to_date(#{reviewDate},'yyyy-mm-dd hh24:mi:ss')
</select>
	
<!-- 리뷰 삭제 -->
<delete id="deleteData" parameterType="hashMap">
	update review set rate='',subject='',content='',reviewDate=sysdate,originalname='',savefilename='',writed='no' 
	where userId=#{userId} and productId=#{productId} and reviewDate=to_date(#{reviewDate},'yyyy-mm-dd hh24:mi:ss')	
</delete>

<!-- 특정 상품 리뷰 갯수 -->
<select id="getProductDataCount" parameterType="String" resultType="int">
	select nvl(count(*),0)
	from review where writed='yes'  
	and productId in (
	select product.productId from review,product 
	where review.productId = product.superProduct 
	and superProduct=#{superProduct})
</select>

<!-- 특정 상품 리뷰 데이터 -->
<select id="productGetList" parameterType="hashMap" resultType="com.codi.dto.ReviewDTO">
	select * from (
	select rownum rnum, data.* from (
	select reviewNum,userId,review.productId productId,superProduct,productSize,color,rate,subject,content,to_char(reviewDate,'yyyy-mm-dd hh24:mi:ss') reviewDate,review.originalName originalName,review.saveFileName saveFileName
	from review,product where review.productId = product.productId and superProduct=#{superProduct} and writed='yes'
	order by ${orderBy}) data) 
<![CDATA[
	where rnum>=#{start} and rnum<=#{end}
]]>
</select>

<!-- 특정 상품 리뷰 데이터(평점용) -->
<select id="productGetList_heart" parameterType="String" resultType="float">
	select nvl(avg(rate) ,0)
	from review,product 
	where review.productId = product.productId 
	and superProduct=#{superProduct} and writed='yes'
</select>

<!-- 특정 상품 리뷰 상품평별 데이터 갯수 -->
<select id="getProductDataCountHeart" parameterType="hashMap" resultType="int">
	select nvl(count(*),0)
	from review where writed='yes' 
	and productId in (
	select product.productId from review,product 
	where review.productId = product.superProduct 
	and superProduct=#{superProduct}) and rate=#{rate}
</select>

<!-- 도움이 돼요 클릭시 필요 -->
<!-- reviewGood count -->
<select id="reviewGoodCount" parameterType="hashMap" resultType="int">
	select nvl(count(*),0) from reviewGood
	where reviewNum=#{reviewNum} and userId = #{userId}
</select>

<!-- reviewGood insert -->
<insert id="insertReviewGood" parameterType="hashMap">
	insert into reviewGood (reviewNum,userId)
	values (#{reviewNum},#{userId})
</insert>

<!-- reviewGood delete -->
<delete id="deleteReviewGood" parameterType="hashMap">
	delete reviewGood where reviewNum=#{reviewNum} and userId = #{userId}
</delete>

<!-- reviewGood count list -->
<select id="reviewGoodList" parameterType="String" resultType="String">
	select reviewNum from reviewGood where userId = #{userId}
</select>

<!-- reviewGood count All -->
<select id="reviewAllCount" parameterType="int" resultType="int">
	select nvl(count(*),0) goodCount from reviewGood where reviewNum=#{reviewNum}
</select>


</mapper>