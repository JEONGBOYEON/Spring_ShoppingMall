<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="productMapper">


<!-- listNew dataCount -->
<select id="getDataCount" resultType="int">
	select nvl(count(*),0) from product
	where fileCategory='list'
</select>

<!-- listCategory dataCount  --> 
<select id="getDataCountCategory" parameterType="string" resultType="int">
	select nvl(count(*),0) from product
	where fileCategory='list' and productCategory=#{productCategory}
</select>

<!-- listCategory dataCount  --> 
<select id="getDataCountSearch" parameterType="hashMap" resultType="int">
	select nvl(count(*),0) from product
	where fileCategory='list' 
	and (color like '%'||#{searchHeader}||'%' 
	or productName like '%'||#{searchHeader}||'%' 
	or productCategory like '%'||UPPER(#{searchCategory})||'%') 
</select>

 
<!-- listNew list -->
<select id="getLists" parameterType="hashMap" resultType="com.codi.dto.ProductDTO">
	select * from (
	select rownum rnum, data.* from(
	select productid,productname,price,savefilename,storeName,storeUrl,originalName,superProduct 
	from product where fileCategory='list' order by productdate desc)data)
<![CDATA[
	where rnum>=#{start} and rnum<=#{end}
]]>
</select>

<!-- listNew list order -->
<select id="getListsOrder" parameterType="hashMap" resultType="com.codi.dto.ProductDTO">
	select * from (
	select rownum rnum, data.* from(
	select productid,productname,price,savefilename,storeName,storeUrl,originalName,superProduct 
	from product where fileCategory='list' order by ${order})data)
<![CDATA[
	where rnum>=#{start} and rnum<=#{end}
]]>
</select>

<select id="getListsOrderHeart" parameterType="hashMap" resultType="com.codi.dto.ProductDTO">
	select * from (
	select rownum rnum, data.* from(
	select a.count, b.productid, b.productname, b.price, b.savefilename, b.storeName, b.storeUrl, b.originalName, b.superProduct from(
	select count(*) count, SUPERPRODUCT From STOREHEART group by superproduct) a, product b 
	where a.superproduct(+) = b.superproduct and b.FILECATEGORY='list'
	order by a.count desc nulls last)data)
<![CDATA[
	where rnum>=#{start} and rnum<=#{end}
]]>
</select>

<select id="getListsOrderRate" parameterType="hashMap" resultType="com.codi.dto.ProductDTO">
	select * from (
	select rownum rnum, data.* from(
	select a.avg, b.productid, b.productname, b.price, b.savefilename, b.storeName, b.storeUrl, b.originalName, b.superProduct from(
	select product.superProduct c,avg(rate) avg
	from review,product 
	where review.productId = product.productid and WRITED='yes'
	GROUP by product.SUPERPRODUCT) a, product b
	where a.c (+) = b.productid and b.FILECATEGORY='list'
	order by a.avg desc nulls last) data)
	<![CDATA[
		where rnum>=#{start} and rnum<=#{end}
	]]>
</select>

<select id="getListsOrderReview" parameterType="hashMap" resultType="com.codi.dto.ProductDTO">
	select * from (
	select rownum rnum, data.* from(
	select a.count, b.productid, b.productname, b.price, b.savefilename, b.storeName, b.storeUrl, b.originalName, b.superProduct from(
	select count(*) count,product.superProduct c
	from review,product 
	where review.productId = product.productid and WRITED='yes'
	GROUP by product.SUPERPRODUCT) a, product b
	where a.c (+) = b.productid and b.FILECATEGORY='list'
	order by a.count desc nulls last) data)
	<![CDATA[
		where rnum>=#{start} and rnum<=#{end}
	]]>
</select>

<!-- listCategory list -->
<select id="getListsCategory" parameterType="hashMap" resultType="com.codi.dto.ProductDTO">
	select * from (
	select rownum rnum, data.* from(
	select productid,productname,price,savefilename,storeName,storeUrl,originalName,superProduct 
	from product where fileCategory='list' and productCategory=#{productCategory} order by productDate desc)data)
<![CDATA[
	where rnum>=#{start} and rnum<=#{end}
]]>
</select>

<!-- listCategory list order-->
<select id="getListsCategoryOrder" parameterType="hashMap" resultType="com.codi.dto.ProductDTO">
	select * from (
	select rownum rnum, data.* from(
	select productid,productname,price,savefilename,storeName,storeUrl,originalName,superProduct 
	from product where fileCategory='list' and productCategory=#{productCategory} order by ${order})data)
<![CDATA[
	where rnum>=#{start} and rnum<=#{end}
]]>
</select>

<select id="getListsCategoryOrderHeart" parameterType="hashMap" resultType="com.codi.dto.ProductDTO">
	select * from (
	select rownum rnum, data.* from(
	select a.count, b.productid, b.productname, b.price, b.savefilename, b.storeName, b.storeUrl, b.originalName, b.superProduct from(
	select count(*) count, SUPERPRODUCT From STOREHEART group by superproduct) a, product b 
	where a.superproduct(+) = b.superproduct and b.FILECATEGORY='list' and b.productCategory=#{productCategory}
	order by a.count desc nulls last)data)
<![CDATA[
	where rnum>=#{start} and rnum<=#{end}
]]>
</select>

<select id="getListsCategoryOrderRate" parameterType="hashMap" resultType="com.codi.dto.ProductDTO">
	select * from (
	select rownum rnum, data.* from(
	select a.avg, b.productid, b.productname, b.price, b.savefilename, b.storeName, b.storeUrl, b.originalName, b.superProduct from(
	select product.superProduct c,avg(rate) avg
	from review,product 
	where review.productId = product.productid and WRITED='yes'
	GROUP by product.SUPERPRODUCT) a, product b
	where a.c (+) = b.productid and b.FILECATEGORY='list' and b.productCategory=#{productCategory}
	order by a.avg desc nulls last) data)
	<![CDATA[
		where rnum>=#{start} and rnum<=#{end}
	]]>
</select>

<select id="getListsCategoryOrderReview" parameterType="hashMap" resultType="com.codi.dto.ProductDTO">
	select * from (
	select rownum rnum, data.* from(
	select a.count, b.productid, b.productname, b.price, b.savefilename, b.storeName, b.storeUrl, b.originalName, b.superProduct from(
	select count(*) count,product.superProduct c
	from review,product 
	where review.productId = product.productid and WRITED='yes'
	GROUP by product.SUPERPRODUCT) a, product b
	where a.c (+) = b.productid and b.FILECATEGORY='list' and b.productCategory=#{productCategory}
	order by a.count desc nulls last) data)
	<![CDATA[
		where rnum>=#{start} and rnum<=#{end}
	]]>
</select>

<!-- listSearch -->
<select id="getListsSearch" parameterType="hashMap" resultType="com.codi.dto.ProductDTO">
	select * from (
	select rownum rnum, data.* from(
	select productId,productName,price,savefilename,storeName,storeUrl,originalName,superProduct 
	from product where fileCategory='list' 
	and (color like '%'||#{searchHeader}||'%' 
	or productName like '%'||#{searchHeader}||'%' 
	or productCategory like '%'||UPPER(#{searchCategory})||'%')
	) data)
<![CDATA[
	where rnum>=#{start} and rnum<=#{end}
]]>
</select>

<!-- storeHeart count -->
<select id="storeHeartCount" parameterType="hashMap" resultType="int">
	select nvl(count(*),0) from storeHeart
	where superProduct=#{superProduct} and userId = #{userId}
</select>

<!-- 하나의 상품이 받은 하트 수 -->
<select id="storeHeartCount2" parameterType="String" resultType="int">
	select nvl(count(*),0) From storeHeart where superProduct=#{superProduct}
</select>
	

<!-- storeHeart insert -->
<insert id="insertHeart" parameterType="hashMap">
	insert into storeHeart (superProduct,userId)
	values (#{superProduct},#{userId})
</insert>

<!-- storeHeart delete -->
<delete id="deleteHeart" parameterType="hashMap">
	delete storeHeart where superProduct=#{superProduct} and userId = #{userId}
</delete>

<!-- storeHeart count list -->
<select id="storeHeartList" parameterType="String" resultType="String">
	select superProduct from storeHeart where userId = #{userId}
</select>

<!-- productAdminList -->
<select id="getAdminLists" resultType="com.codi.dto.ProductDTO">
	select productId,productCategory,productName,productSize,price,
	productDate,amount,color,state,fileCategory,originalName,saveFileName,superProduct,storeName,storeUrl
	from product order by productdate desc
</select>

<!-- productAdminCreate -->
<insert id="insertData" parameterType="com.codi.dto.ProductDTO">
	insert into product(productId,productCategory,productName,productSize,price,
	productDate,amount,color,state,fileCategory,originalName,saveFileName,superProduct,storeName,storeUrl)
	values (#{productId},#{productCategory},#{productName},#{productSize},#{price},
	sysdate,0,#{color},#{state},#{fileCategory,jdbcType=VARCHAR},#{originalName},#{saveFileName},#{superProduct},#{storeName},#{storeUrl})
</insert>

<delete id="productAdminDelete" parameterType="string">
	delete product where productId=#{productId}
</delete>

</mapper>